
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000384  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000003f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ada  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000069d  00000000  00000000  00000f62  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b2  00000000  00000000  000015ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000397  00000000  00000000  00001ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004c8  00000000  00000000  00001e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00002337  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 44 00 	jmp	0x88	; 0x88 <__ctors_end>
   4:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   8:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  28:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  2c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  34:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  38:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  40:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  48:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  4c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  54:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  58:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  5c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  60:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  64:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  68:	76 00       	.word	0x0076	; ????
  6a:	86 00       	.word	0x0086	; ????
  6c:	96 00       	.word	0x0096	; ????
  6e:	a9 00       	.word	0x00a9	; ????
  70:	bc 00       	.word	0x00bc	; ????
  72:	cf 00       	.word	0x00cf	; ????
  74:	e2 00       	.word	0x00e2	; ????
  76:	f5 00       	.word	0x00f5	; ????
  78:	05 01       	movw	r0, r10
  7a:	18 01       	movw	r2, r16
  7c:	2b 01       	movw	r4, r22
  7e:	3e 01       	movw	r6, r28
  80:	51 01       	movw	r10, r2
  82:	61 01       	movw	r12, r2
  84:	74 01       	movw	r14, r8
  86:	87 01       	movw	r16, r14

00000088 <__ctors_end>:
  88:	11 24       	eor	r1, r1
  8a:	1f be       	out	0x3f, r1	; 63
  8c:	cf ef       	ldi	r28, 0xFF	; 255
  8e:	d8 e0       	ldi	r29, 0x08	; 8
  90:	de bf       	out	0x3e, r29	; 62
  92:	cd bf       	out	0x3d, r28	; 61

00000094 <__do_clear_bss>:
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	a0 e0       	ldi	r26, 0x00	; 0
  98:	b1 e0       	ldi	r27, 0x01	; 1
  9a:	01 c0       	rjmp	.+2      	; 0x9e <.do_clear_bss_start>

0000009c <.do_clear_bss_loop>:
  9c:	1d 92       	st	X+, r1

0000009e <.do_clear_bss_start>:
  9e:	a2 30       	cpi	r26, 0x02	; 2
  a0:	b2 07       	cpc	r27, r18
  a2:	e1 f7       	brne	.-8      	; 0x9c <.do_clear_bss_loop>
  a4:	0e 94 58 00 	call	0xb0	; 0xb0 <main>
  a8:	0c 94 c0 01 	jmp	0x380	; 0x380 <_exit>

000000ac <__bad_interrupt>:
  ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <main>:

int i;
int main(void)
{

	DDRB = 0x3F;//sets pins 0 thru 5 of PORTB as OUTPUTS
  b0:	8f e3       	ldi	r24, 0x3F	; 63
  b2:	84 b9       	out	0x04, r24	; 4
	DDRD = DDRD | 0xFC;//PD7(output)->segment G; PD4(output)->buzzer; PD2(input)->switch
  b4:	8a b1       	in	r24, 0x0a	; 10
  b6:	8c 6f       	ori	r24, 0xFC	; 252
  b8:	8a b9       	out	0x0a, r24	; 10
	//DDRD = (DDRD & 0x20);//sets PD5 as an input leaves other bits unchanged
	PORTD=PORTD | 0x04;//turns on pullup resistor connected to pd2
  ba:	8b b1       	in	r24, 0x0b	; 11
  bc:	84 60       	ori	r24, 0x04	; 4
  be:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c0:	8f e9       	ldi	r24, 0x9F	; 159
  c2:	9f e0       	ldi	r25, 0x0F	; 15
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <main+0x14>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x1a>
  ca:	00 00       	nop
	_delay_ms(1);
	while((PIND & 0x04)){}//wait for button to be pressed
  cc:	4a 99       	sbic	0x09, 2	; 9
  ce:	fe cf       	rjmp	.-4      	; 0xcc <main+0x1c>
	
	//for loop steps through cases 0 through 9
	//each case produces a number 0 through 9 on the display
	//the numbers are displayed in reverse order
	//9,8,7,6,5,4,3,2,1,0
	for (i=0;i<16;i++)
  d0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  d4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
  d8:	35 c1       	rjmp	.+618    	; 0x344 <main+0x294>
	{
		switch (i)
  da:	80 31       	cpi	r24, 0x10	; 16
  dc:	91 05       	cpc	r25, r1
  de:	08 f0       	brcs	.+2      	; 0xe2 <main+0x32>
  e0:	28 c1       	rjmp	.+592    	; 0x332 <main+0x282>
  e2:	fc 01       	movw	r30, r24
  e4:	ec 5c       	subi	r30, 0xCC	; 204
  e6:	ff 4f       	sbci	r31, 0xFF	; 255
  e8:	0c 94 ba 01 	jmp	0x374	; 0x374 <__tablejump2__>
		{
			case 0:		//number zero
			PORTB=0x00;		//turn off all segments connected to PORTB
  ec:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
  ee:	8b b1       	in	r24, 0x0b	; 11
  f0:	8f 77       	andi	r24, 0x7F	; 127
  f2:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|C|D|E|F; //turn on display segments controlled by PORTB
  f4:	8f e3       	ldi	r24, 0x3F	; 63
  f6:	85 b9       	out	0x05, r24	; 5
  f8:	9f ef       	ldi	r25, 0xFF	; 255
  fa:	23 ed       	ldi	r18, 0xD3	; 211
  fc:	80 e3       	ldi	r24, 0x30	; 48
  fe:	91 50       	subi	r25, 0x01	; 1
 100:	20 40       	sbci	r18, 0x00	; 0
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x4e>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x58>
 108:	00 00       	nop
 10a:	13 c1       	rjmp	.+550    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 1:	//number 1
			PORTB=0x00;	//turn off all segments connected to PORTB
 10c:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F; //turn off segment G connected to PORTD
 10e:	8b b1       	in	r24, 0x0b	; 11
 110:	8f 77       	andi	r24, 0x7F	; 127
 112:	8b b9       	out	0x0b, r24	; 11
			PORTB = B|C;	//turn on display segments controlled by PORTB
 114:	86 e0       	ldi	r24, 0x06	; 6
 116:	85 b9       	out	0x05, r24	; 5
 118:	9f ef       	ldi	r25, 0xFF	; 255
 11a:	23 ed       	ldi	r18, 0xD3	; 211
 11c:	80 e3       	ldi	r24, 0x30	; 48
 11e:	91 50       	subi	r25, 0x01	; 1
 120:	20 40       	sbci	r18, 0x00	; 0
 122:	80 40       	sbci	r24, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x6e>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0x78>
 128:	00 00       	nop
 12a:	03 c1       	rjmp	.+518    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 2:	//number 2
			PORTB=0x00;	//turn off all segments connected to PORTB
 12c:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F; //turn off segment G connected to PORTD
 12e:	8b b1       	in	r24, 0x0b	; 11
 130:	8f 77       	andi	r24, 0x7F	; 127
 132:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|E|D;	//turn on display segments controlled by PORTB
 134:	8b e1       	ldi	r24, 0x1B	; 27
 136:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 138:	8b b1       	in	r24, 0x0b	; 11
 13a:	80 68       	ori	r24, 0x80	; 128
 13c:	8b b9       	out	0x0b, r24	; 11
 13e:	9f ef       	ldi	r25, 0xFF	; 255
 140:	23 ed       	ldi	r18, 0xD3	; 211
 142:	80 e3       	ldi	r24, 0x30	; 48
 144:	91 50       	subi	r25, 0x01	; 1
 146:	20 40       	sbci	r18, 0x00	; 0
 148:	80 40       	sbci	r24, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <main+0x94>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0x9e>
 14e:	00 00       	nop
 150:	f0 c0       	rjmp	.+480    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 3:		//number 3
			PORTB=0x00;		//turn off all segments connected to PORTB
 152:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	8f 77       	andi	r24, 0x7F	; 127
 158:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|C|D;	//turn on display segments controlled by PORTB
 15a:	8f e0       	ldi	r24, 0x0F	; 15
 15c:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 15e:	8b b1       	in	r24, 0x0b	; 11
 160:	80 68       	ori	r24, 0x80	; 128
 162:	8b b9       	out	0x0b, r24	; 11
 164:	9f ef       	ldi	r25, 0xFF	; 255
 166:	23 ed       	ldi	r18, 0xD3	; 211
 168:	80 e3       	ldi	r24, 0x30	; 48
 16a:	91 50       	subi	r25, 0x01	; 1
 16c:	20 40       	sbci	r18, 0x00	; 0
 16e:	80 40       	sbci	r24, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <main+0xba>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0xc4>
 174:	00 00       	nop
 176:	dd c0       	rjmp	.+442    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 4:		//number 4
			PORTB=0x00;		//turn off all segments connected to PORTB
 178:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 17a:	8b b1       	in	r24, 0x0b	; 11
 17c:	8f 77       	andi	r24, 0x7F	; 127
 17e:	8b b9       	out	0x0b, r24	; 11
			PORTB = B|C|F;	//turn on display segments controlled by PORTB
 180:	86 e2       	ldi	r24, 0x26	; 38
 182:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 184:	8b b1       	in	r24, 0x0b	; 11
 186:	80 68       	ori	r24, 0x80	; 128
 188:	8b b9       	out	0x0b, r24	; 11
 18a:	9f ef       	ldi	r25, 0xFF	; 255
 18c:	23 ed       	ldi	r18, 0xD3	; 211
 18e:	80 e3       	ldi	r24, 0x30	; 48
 190:	91 50       	subi	r25, 0x01	; 1
 192:	20 40       	sbci	r18, 0x00	; 0
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0xe0>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0xea>
 19a:	00 00       	nop
 19c:	ca c0       	rjmp	.+404    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 5:		//number 5
			PORTB=0x00;		//turn off all segments connected to PORTB
 19e:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 1a0:	8b b1       	in	r24, 0x0b	; 11
 1a2:	8f 77       	andi	r24, 0x7F	; 127
 1a4:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|C|D|F;	//turn on display segments controlled by PORTB
 1a6:	8d e2       	ldi	r24, 0x2D	; 45
 1a8:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 1aa:	8b b1       	in	r24, 0x0b	; 11
 1ac:	80 68       	ori	r24, 0x80	; 128
 1ae:	8b b9       	out	0x0b, r24	; 11
 1b0:	9f ef       	ldi	r25, 0xFF	; 255
 1b2:	23 ed       	ldi	r18, 0xD3	; 211
 1b4:	80 e3       	ldi	r24, 0x30	; 48
 1b6:	91 50       	subi	r25, 0x01	; 1
 1b8:	20 40       	sbci	r18, 0x00	; 0
 1ba:	80 40       	sbci	r24, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <main+0x106>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x110>
 1c0:	00 00       	nop
 1c2:	b7 c0       	rjmp	.+366    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 6:		//number 6
			PORTB=0x00;		//turn off all segments connected to PORTB
 1c4:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 1c6:	8b b1       	in	r24, 0x0b	; 11
 1c8:	8f 77       	andi	r24, 0x7F	; 127
 1ca:	8b b9       	out	0x0b, r24	; 11
			PORTB = C|D|E|F;	//turn on display segments controlled by PORTB
 1cc:	8c e3       	ldi	r24, 0x3C	; 60
 1ce:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 1d0:	8b b1       	in	r24, 0x0b	; 11
 1d2:	80 68       	ori	r24, 0x80	; 128
 1d4:	8b b9       	out	0x0b, r24	; 11
 1d6:	9f ef       	ldi	r25, 0xFF	; 255
 1d8:	23 ed       	ldi	r18, 0xD3	; 211
 1da:	80 e3       	ldi	r24, 0x30	; 48
 1dc:	91 50       	subi	r25, 0x01	; 1
 1de:	20 40       	sbci	r18, 0x00	; 0
 1e0:	80 40       	sbci	r24, 0x00	; 0
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <main+0x12c>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0x136>
 1e6:	00 00       	nop
 1e8:	a4 c0       	rjmp	.+328    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 7:		//number 7
			PORTB=0x00;		//turn off all segments connected to PORTB
 1ea:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 1ec:	8b b1       	in	r24, 0x0b	; 11
 1ee:	8f 77       	andi	r24, 0x7F	; 127
 1f0:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|C;	//turn on display segments controlled by PORTB
 1f2:	87 e0       	ldi	r24, 0x07	; 7
 1f4:	85 b9       	out	0x05, r24	; 5
 1f6:	9f ef       	ldi	r25, 0xFF	; 255
 1f8:	23 ed       	ldi	r18, 0xD3	; 211
 1fa:	80 e3       	ldi	r24, 0x30	; 48
 1fc:	91 50       	subi	r25, 0x01	; 1
 1fe:	20 40       	sbci	r18, 0x00	; 0
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <main+0x14c>
 204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x156>
 206:	00 00       	nop
 208:	94 c0       	rjmp	.+296    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case  8:		//number 8
			PORTB=0x00;		//turn off all segments connected to PORTB
 20a:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 20c:	8b b1       	in	r24, 0x0b	; 11
 20e:	8f 77       	andi	r24, 0x7F	; 127
 210:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|C|D|E|F; //turn on display segments controlled by PORTB
 212:	8f e3       	ldi	r24, 0x3F	; 63
 214:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 216:	8b b1       	in	r24, 0x0b	; 11
 218:	80 68       	ori	r24, 0x80	; 128
 21a:	8b b9       	out	0x0b, r24	; 11
 21c:	9f ef       	ldi	r25, 0xFF	; 255
 21e:	23 ed       	ldi	r18, 0xD3	; 211
 220:	80 e3       	ldi	r24, 0x30	; 48
 222:	91 50       	subi	r25, 0x01	; 1
 224:	20 40       	sbci	r18, 0x00	; 0
 226:	80 40       	sbci	r24, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x172>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x17c>
 22c:	00 00       	nop
 22e:	81 c0       	rjmp	.+258    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 9:		//number 9
			PORTB=0x00;		//turn off all segments connected to PORTB
 230:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 232:	8b b1       	in	r24, 0x0b	; 11
 234:	8f 77       	andi	r24, 0x7F	; 127
 236:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|C|F;	//turn on display segments controlled by PORTB
 238:	87 e2       	ldi	r24, 0x27	; 39
 23a:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 23c:	8b b1       	in	r24, 0x0b	; 11
 23e:	80 68       	ori	r24, 0x80	; 128
 240:	8b b9       	out	0x0b, r24	; 11
 242:	9f ef       	ldi	r25, 0xFF	; 255
 244:	23 ed       	ldi	r18, 0xD3	; 211
 246:	80 e3       	ldi	r24, 0x30	; 48
 248:	91 50       	subi	r25, 0x01	; 1
 24a:	20 40       	sbci	r18, 0x00	; 0
 24c:	80 40       	sbci	r24, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x198>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x1a2>
 252:	00 00       	nop
 254:	6e c0       	rjmp	.+220    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 10:
			PORTB=0x00;		//turn off all segments connected to PORTB
 256:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 258:	8b b1       	in	r24, 0x0b	; 11
 25a:	8f 77       	andi	r24, 0x7F	; 127
 25c:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|B|C|E|F; //turn on display segments controlled by PORTB
 25e:	87 e3       	ldi	r24, 0x37	; 55
 260:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;	//turn on display segment controlled by PORTD
 262:	8b b1       	in	r24, 0x0b	; 11
 264:	80 68       	ori	r24, 0x80	; 128
 266:	8b b9       	out	0x0b, r24	; 11
 268:	9f ef       	ldi	r25, 0xFF	; 255
 26a:	23 ed       	ldi	r18, 0xD3	; 211
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	91 50       	subi	r25, 0x01	; 1
 270:	20 40       	sbci	r18, 0x00	; 0
 272:	80 40       	sbci	r24, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <main+0x1be>
 276:	00 c0       	rjmp	.+0      	; 0x278 <main+0x1c8>
 278:	00 00       	nop
 27a:	5b c0       	rjmp	.+182    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 11:
			PORTB=0x00;		//turn off all segments connected to PORTB
 27c:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 27e:	8b b1       	in	r24, 0x0b	; 11
 280:	8f 77       	andi	r24, 0x7F	; 127
 282:	8b b9       	out	0x0b, r24	; 11
			PORTB = F|E|D|C;
 284:	8c e3       	ldi	r24, 0x3C	; 60
 286:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;
 288:	8b b1       	in	r24, 0x0b	; 11
 28a:	80 68       	ori	r24, 0x80	; 128
 28c:	8b b9       	out	0x0b, r24	; 11
 28e:	9f ef       	ldi	r25, 0xFF	; 255
 290:	23 ed       	ldi	r18, 0xD3	; 211
 292:	80 e3       	ldi	r24, 0x30	; 48
 294:	91 50       	subi	r25, 0x01	; 1
 296:	20 40       	sbci	r18, 0x00	; 0
 298:	80 40       	sbci	r24, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x1e4>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x1ee>
 29e:	00 00       	nop
 2a0:	48 c0       	rjmp	.+144    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 12:
			PORTB=0x00;		//turn off all segments connected to PORTB
 2a2:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 2a4:	8b b1       	in	r24, 0x0b	; 11
 2a6:	8f 77       	andi	r24, 0x7F	; 127
 2a8:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|E|F|D;
 2aa:	89 e3       	ldi	r24, 0x39	; 57
 2ac:	85 b9       	out	0x05, r24	; 5
 2ae:	9f ef       	ldi	r25, 0xFF	; 255
 2b0:	23 ed       	ldi	r18, 0xD3	; 211
 2b2:	80 e3       	ldi	r24, 0x30	; 48
 2b4:	91 50       	subi	r25, 0x01	; 1
 2b6:	20 40       	sbci	r18, 0x00	; 0
 2b8:	80 40       	sbci	r24, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <main+0x204>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <main+0x20e>
 2be:	00 00       	nop
 2c0:	38 c0       	rjmp	.+112    	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 13:
			PORTB=0x00;		//turn off all segments connected to PORTB
 2c2:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 2c4:	8b b1       	in	r24, 0x0b	; 11
 2c6:	8f 77       	andi	r24, 0x7F	; 127
 2c8:	8b b9       	out	0x0b, r24	; 11
			PORTB = B|C|D|E;
 2ca:	8e e1       	ldi	r24, 0x1E	; 30
 2cc:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;
 2ce:	8b b1       	in	r24, 0x0b	; 11
 2d0:	80 68       	ori	r24, 0x80	; 128
 2d2:	8b b9       	out	0x0b, r24	; 11
 2d4:	9f ef       	ldi	r25, 0xFF	; 255
 2d6:	23 ed       	ldi	r18, 0xD3	; 211
 2d8:	80 e3       	ldi	r24, 0x30	; 48
 2da:	91 50       	subi	r25, 0x01	; 1
 2dc:	20 40       	sbci	r18, 0x00	; 0
 2de:	80 40       	sbci	r24, 0x00	; 0
 2e0:	e1 f7       	brne	.-8      	; 0x2da <main+0x22a>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <main+0x234>
 2e4:	00 00       	nop
 2e6:	25 c0       	rjmp	.+74     	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 14:
			PORTB=0x00;		//turn off all segments connected to PORTB
 2e8:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 2ea:	8b b1       	in	r24, 0x0b	; 11
 2ec:	8f 77       	andi	r24, 0x7F	; 127
 2ee:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|F|E|D;
 2f0:	89 e3       	ldi	r24, 0x39	; 57
 2f2:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;
 2f4:	8b b1       	in	r24, 0x0b	; 11
 2f6:	80 68       	ori	r24, 0x80	; 128
 2f8:	8b b9       	out	0x0b, r24	; 11
 2fa:	9f ef       	ldi	r25, 0xFF	; 255
 2fc:	23 ed       	ldi	r18, 0xD3	; 211
 2fe:	80 e3       	ldi	r24, 0x30	; 48
 300:	91 50       	subi	r25, 0x01	; 1
 302:	20 40       	sbci	r18, 0x00	; 0
 304:	80 40       	sbci	r24, 0x00	; 0
 306:	e1 f7       	brne	.-8      	; 0x300 <main+0x250>
 308:	00 c0       	rjmp	.+0      	; 0x30a <main+0x25a>
 30a:	00 00       	nop
 30c:	12 c0       	rjmp	.+36     	; 0x332 <main+0x282>
			_delay_ms(1000);
			break;
			
			case 15:
			PORTB=0x00;		//turn off all segments connected to PORTB
 30e:	15 b8       	out	0x05, r1	; 5
			PORTD=PORTD & 0x7F;	//turn off segment G connected to PORTD
 310:	8b b1       	in	r24, 0x0b	; 11
 312:	8f 77       	andi	r24, 0x7F	; 127
 314:	8b b9       	out	0x0b, r24	; 11
			PORTB = A|F|E;
 316:	81 e3       	ldi	r24, 0x31	; 49
 318:	85 b9       	out	0x05, r24	; 5
			PORTD = PORTD | G;
 31a:	8b b1       	in	r24, 0x0b	; 11
 31c:	80 68       	ori	r24, 0x80	; 128
 31e:	8b b9       	out	0x0b, r24	; 11
 320:	9f ef       	ldi	r25, 0xFF	; 255
 322:	23 ed       	ldi	r18, 0xD3	; 211
 324:	80 e3       	ldi	r24, 0x30	; 48
 326:	91 50       	subi	r25, 0x01	; 1
 328:	20 40       	sbci	r18, 0x00	; 0
 32a:	80 40       	sbci	r24, 0x00	; 0
 32c:	e1 f7       	brne	.-8      	; 0x326 <main+0x276>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0x280>
 330:	00 00       	nop
	
	//for loop steps through cases 0 through 9
	//each case produces a number 0 through 9 on the display
	//the numbers are displayed in reverse order
	//9,8,7,6,5,4,3,2,1,0
	for (i=0;i<16;i++)
 332:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 336:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 340:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 344:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 348:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 34c:	80 31       	cpi	r24, 0x10	; 16
 34e:	91 05       	cpc	r25, r1
 350:	0c f4       	brge	.+2      	; 0x354 <main+0x2a4>
 352:	c3 ce       	rjmp	.-634    	; 0xda <main+0x2a>
		}
		
		
	}
	
	PORTD =(PORTD | 0x10);		//turn on active buzzer
 354:	8b b1       	in	r24, 0x0b	; 11
 356:	80 61       	ori	r24, 0x10	; 16
 358:	8b b9       	out	0x0b, r24	; 11
 35a:	9f ef       	ldi	r25, 0xFF	; 255
 35c:	23 ed       	ldi	r18, 0xD3	; 211
 35e:	80 e3       	ldi	r24, 0x30	; 48
 360:	91 50       	subi	r25, 0x01	; 1
 362:	20 40       	sbci	r18, 0x00	; 0
 364:	80 40       	sbci	r24, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <main+0x2b0>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0x2ba>
 36a:	00 00       	nop
	_delay_ms(1000);			//wait for one second
	PORTD = (PORTD & 0xEF);		//turn off active buzzer
 36c:	8b b1       	in	r24, 0x0b	; 11
 36e:	8f 7e       	andi	r24, 0xEF	; 239
 370:	8b b9       	out	0x0b, r24	; 11
 372:	ff cf       	rjmp	.-2      	; 0x372 <main+0x2c2>

00000374 <__tablejump2__>:
 374:	ee 0f       	add	r30, r30
 376:	ff 1f       	adc	r31, r31
 378:	05 90       	lpm	r0, Z+
 37a:	f4 91       	lpm	r31, Z
 37c:	e0 2d       	mov	r30, r0
 37e:	09 94       	ijmp

00000380 <_exit>:
 380:	f8 94       	cli

00000382 <__stop_program>:
 382:	ff cf       	rjmp	.-2      	; 0x382 <__stop_program>
