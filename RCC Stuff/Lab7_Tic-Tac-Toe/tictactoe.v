
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================
// I could not fully test this program since i do not have a RBG cord or anything that uses that.
// I understand I may lose points for this but i think my code makes sense.
module tictactoe(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// VGA //////////
	output		     [3:0]		VGA_B,
	output		     [3:0]		VGA_G,
	output		          		VGA_HS,
	output		     [3:0]		VGA_R,
	output		          		VGA_VS,

	//////////// Accelerometer //////////
	output		          		GSENSOR_CS_N,
	input 		     [2:1]		GSENSOR_INT,
	output		          		GSENSOR_SCLK,
	inout 		          		GSENSOR_SDI,
	inout 		          		GSENSOR_SDO,

	//////////// Arduino //////////
	inout 		    [15:0]		ARDUINO_IO,
	inout 		          		ARDUINO_RESET_N
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire vga_clk;
wire button_clock;
wire [2:0] pos1;
wire [2:0] pos2;
wire [2:0] pos3;
wire [2:0] pos4;
wire [2:0] pos5;
wire [2:0] pos6;
wire [2:0] pos7;
wire [2:0] pos8;
wire [2:0] pos9;
wire ren1;
wire ren2;
wire ren3;
wire ren4;
wire ren5;
wire ren6;
wire ren7;
wire ren8;
wire ren9;
wire [9:0] offset_x;
wire [9:0] offset_y;
wire [3:0] position;
wire bluen1;
wire bluen2;
wire bluen3;
wire bluen4;
wire bluen5;
wire bluen6;
wire bluen7;
wire bluen8;
wire bluen9;
wire [9:0] xpos;
wire [9:0] ypos;

clock v1(MAX10_CLK1_50, vga_clk);
clock v2(MAX10_CLK1_50, button_clock);


//=======================================================
//  Structural coding
//=======================================================
select_controller sc(button_clock, 
							SW[9],
							KEY[1],
							offset_x,
							offset_y,
							position);
						
video_controller vc(vga_clk,
							VGA_HS,
							VGA_VS,
							xpos,
							ypos);
							
gamelogic gl(position,
					vga_clk,
					KEY[0],
					reset);
					
winner w(pos1,
			pos2,
			pos3,
			pos4,
			pos5,
			pos6,
			pos7,
			pos8,
			pos9);
			
decode_square dcs(pos1,
						pos2,
						pos3,
						pos4,
						pos5,
						pos6,
						pos7,
						pos8,
						pos9,
						ren1,
						ren2,
						ren3,
						ren4,
						ren5,
						ren6,
						ren7,
						ren8,
						ren9,
						bluen1,
						bluen2,
						bluen3,
						bluen4,
						bluen5,
						bluen6,
						bluen7,
						bluen8,
						bluen9);
						
gameVGA_decode(xpos,
					ypos,
					offsetx,
					offsety,
					ren1,
					ren2,
					ren3,
					ren4,
					ren5,
					ren6,
					ren7,
					ren8,
					ren9,
					bluen1,
					bluen2,
					bluen3,
					bluen4,
					bluen5,
					bluen6,
					bluen7,
					bluen8,
					bluen9,
					VGA_R,
					VGA_B,
					VGA_G);
endmodule
